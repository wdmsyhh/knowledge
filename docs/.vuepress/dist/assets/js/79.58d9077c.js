(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{501:function(t,_,v){"use strict";v.r(_);var a=v(17),r=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"计算机基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算机基础知识"}},[t._v("#")]),t._v(" 计算机基础知识")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/7008151380015710222",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/7008151380015710222"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"osi-的七层模型分别是-各自的功能是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#osi-的七层模型分别是-各自的功能是什么"}},[t._v("#")]),t._v(" OSI 的七层模型分别是？各自的功能是什么？")]),t._v(" "),_("h3",{attrs:{id:"简要概括"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简要概括"}},[t._v("#")]),t._v(" 简要概括")]),t._v(" "),_("ul",[_("li",[t._v("物理层：底层数据传输，如网线；网卡标准。")]),t._v(" "),_("li",[t._v("数据链路层：定义数据的基本格式，如何传输，如何标识；如网卡MAC地址。")]),t._v(" "),_("li",[t._v("网络层：定义IP编址，定义路由功能；如不同设备的数据转发。")]),t._v(" "),_("li",[t._v("传输层：端到端传输数据的基本功能；如 TCP、UDP。")]),t._v(" "),_("li",[t._v("会话层：控制应用程序之间会话能力；如不同软件数据分发给不同软件。")]),t._v(" "),_("li",[t._v("表示层：数据格式标识，基本压缩加密功能。")]),t._v(" "),_("li",[t._v("应用层：各种应用软件，包括 Web 应用。")])]),t._v(" "),_("h3",{attrs:{id:"说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明：")]),t._v(" "),_("ul",[_("li",[t._v("在四层，既传输层数据被称作段（Segments）；")]),t._v(" "),_("li",[t._v("三层网络层数据被称做包（Packages）；")]),t._v(" "),_("li",[t._v("二层数据链路层时数据被称为帧（Frames）；")]),t._v(" "),_("li",[t._v("一层物理层时数据被称为比特流（Bits）。")])]),t._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("ul",[_("li",[t._v("网络七层模型是一个标准，而非实现。")]),t._v(" "),_("li",[t._v("网络四层模型是一个实现的应用模型。")]),t._v(" "),_("li",[t._v("网络四层模型由七层模型简化合并而来。")])]),t._v(" "),_("h2",{attrs:{id:"_512-兆是多少字节"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_512-兆是多少字节"}},[t._v("#")]),t._v(" 512 兆是多少字节")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("计算机存储信息的最小单位，称之为位（bit，又称比特）")])]),t._v(" "),_("li",[_("p",[t._v("存储器中所包含存储单元的数量称为存储容量，其计量基本单位是字节（Byte。简称B），8个二进制位称为1个字节，此外还有KB、MB、GB、TB等，它们之间的换算关系是1Byte＝8bit，1KB=1024B，1MB=1024KB，1GB=1024MB，1TB=1024GB。")])])]),t._v(" "),_("p",[t._v("1M ＝ 1 "),_("em",[t._v("1024")]),t._v(" 1024 个字节")]),t._v(" "),_("p",[t._v("512M = 512 "),_("em",[t._v("1024")]),t._v(" 1024 字节")]),t._v(" "),_("h2",{attrs:{id:"运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://blog.csdn.net/ckirt/article/details/122038366",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/ckirt/article/details/122038366"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("与运算（&）：与运算的运算规则：与运算是计算机中一种基本的逻辑运算方式，符号表示为“&”，按二进制位进行与运算，运算规则为，0&0=0；0&1=0；1&0=0；1&1=1，即：两位同时为“1”，结果才为“1”，否则为“0”")]),t._v(" "),_("p",[t._v("或运算（|）：两个相“或”的逻辑变量中，只要有一个为1，“或”运算的结果就为1。仅当两个变量都为0时，或运算的结果才为0")]),t._v(" "),_("p",[t._v("非运算 (!): 1取0，0取1 !1 = 0， !0 = 1 !(10001) = 01110。")]),t._v(" "),_("p",[t._v("异或运算(^): 运算法则为相同取0，不同取1。异或运算，关键在异上面，异为1，否则为0")]),t._v(" "),_("h2",{attrs:{id:"计算机多少核和多少线程分别是什么-又有什么关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算机多少核和多少线程分别是什么-又有什么关系"}},[t._v("#")]),t._v(" 计算机多少核和多少线程分别是什么，又有什么关系？")]),t._v(" "),_("p",[t._v("在计算机处理器（CPU）的上下文中，核心（core）是指能够独立执行指令流的处理单元。每个核心都包含自己的算术逻辑单元、控制单元和缓存，它们可以同时执行多个指令。")]),t._v(" "),_("p",[t._v("线程（thread）是在操作系统级别上进行调度和执行的最小单位。一个线程代表一个独立的执行路径，可以执行指令、访问内存并与其他线程共享计算机资源。")]),t._v(" "),_("p",[t._v("计算机的核心数指的是处理器中的物理核心数量，而线程数指的是每个物理核心能够同时处理的线程数。现代处理器支持一种称为超线程技术，通过在每个物理核心中创建多个逻辑线程来增加线程数。")]),t._v(" "),_("p",[t._v("超线程可以让每个物理核心同时执行多个线程。这意味着，一个双核四线程的处理器可以同时执行四个线程，每个核心处理两个线程。超线程技术能够提高处理器的并行性，提升多线程应用程序的性能。")]),t._v(" "),_("p",[t._v("核心数和线程数之间的关系是，线程数通常是核心数的倍数，可以是相同数量或更多。例如，一个四核八线程的处理器意味着有四个物理核心和每个核心能够同时执行两个线程。")]),t._v(" "),_("p",[t._v("在实际应用中，多核和多线程的组合可以提供更高的处理能力和更好的并行性能。它们可以用于处理多任务、多线程应用程序、并行计算和服务器工作负载等场景，提高系统的响应速度和整体性能。")])])}),[],!1,null,null,null);_.default=r.exports}}]);