(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{417:function(t,s,a){t.exports=a.p+"assets/img/1.a53fd9c0.png"},418:function(t,s,a){t.exports=a.p+"assets/img/2.fad0df2d.png"},419:function(t,s,a){t.exports=a.p+"assets/img/3.3aa1460a.png"},420:function(t,s,a){t.exports=a.p+"assets/img/debug-1.9a8e099a.png"},421:function(t,s,a){t.exports=a.p+"assets/img/debug-2.097fcb5e.png"},422:function(t,s,a){t.exports=a.p+"assets/img/image-git-1.8e715d79.png"},423:function(t,s,a){t.exports=a.p+"assets/img/image-git-2.60ffa10b.png"},424:function(t,s,a){t.exports=a.p+"assets/img/image-git-3.e4603b7a.png"},514:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"goland"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goland"}},[t._v("#")]),t._v(" Goland")]),t._v(" "),s("h2",{attrs:{id:"常用快捷键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用快捷键"}},[t._v("#")]),t._v(" 常用快捷键")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("选中方法点击 "),s("code",[t._v("Ctrl+Enter")]),t._v(" 可以添加该方法的测试代码")])]),t._v(" "),s("li",[s("p",[t._v("选中一段代码点击 "),s("code",[t._v("Command+Alt+M")]),t._v(" 提取方法")])]),t._v(" "),s("li",[s("p",[t._v("测试代码文件中点击 "),s("code",[t._v("Ctrl+Enter")]),t._v(" 添加测试代码")])]),t._v(" "),s("li",[s("p",[t._v("按住Shift + Alt，再按鼠标左键向上滑动，可以使一列上出现多个光标。")])]),t._v(" "),s("li",[s("p",[t._v("按住Alt，再按鼠标左键，可以多行出现光标进行多行编辑。")])])]),t._v(" "),s("h2",{attrs:{id:"常用插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用插件"}},[t._v("#")]),t._v(" 常用插件")]),t._v(" "),s("p",[s("img",{attrs:{src:a(417),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"解决-proto-文件报红问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决-proto-文件报红问题"}},[t._v("#")]),t._v(" 解决 proto 文件报红问题")]),t._v(" "),s("p",[s("img",{attrs:{src:a(418),alt:""}})]),t._v(" "),s("p",[t._v("添加 proto 文件路径\n"),s("img",{attrs:{src:a(419),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"goland-调试-docker-容器中的-go-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goland-调试-docker-容器中的-go-代码"}},[t._v("#")]),t._v(" goland 调试 docker 容器中的 go 代码")]),t._v(" "),s("ul",[s("li",[t._v("github clone delve 源码。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/go-delve/delve.git\n")])])]),s("ul",[s("li",[t._v("编译。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src\ngo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" github.com/go-delve/delve/cmd/dlv\n")])])]),s("ul",[s("li",[t._v("编译完成后 dlv 文件就在 $GOPATH/bin 目录下了，可以以下命令查看版本信息：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dlv "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n")])])]),s("ul",[s("li",[t._v("准备 demo。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("package main\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crypto/md5"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html/template"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strconv"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strings"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nfunc sayHelloName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http.ResponseWriter, r *http.Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tr.ParseForm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       // 解析参数，默认是不会解析的\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r.Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 这些信息是输出入服务器的打印信息\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path "')]),t._v(", r.URL.Path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheme "')]),t._v(", r.URL.Scheme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r.Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_long"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v(" :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" range r.Form "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key:"')]),t._v(", k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(", strings.Join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt.Fprintf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello vic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nfunc login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http.ResponseWriter, r *http.Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method "')]),t._v(", r.Method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" r.Method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tt, _ :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template.ParseFiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"login.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tlog.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t.Execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w, nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tr.ParseForm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 如果注释这句不会有输出 默认情况下，Handler里面是不会自动解析form的，必须显式的调用r.ParseForm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("后，你才能对这个表单数据进行操作\n\t\t//请求的是登录数据，那么执行登录的逻辑判断\n\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username:"')]),t._v(", r.Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password:"')]),t._v(", r.Form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfunc upload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http.ResponseWriter, r *http.Request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method:"')]),t._v(", r.Method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" //获取请求的方法\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" r.Method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcrutime :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time.Now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".Unix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\th :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" md5.New"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tio.WriteString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h, strconv.FormatInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("crutime, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n\t\ttoken :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt.Sprintf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/x"')]),t._v(", h.Sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n\n\t\tt, _ :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template.ParseFiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"upload.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tt.Execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w, nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tr.ParseMultipartForm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tfile, handler, err :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r.FormFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uploadfile"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" nil "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tdefer file.Close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tfmt.Fprintf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%v"')]),t._v(", handler.Header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tf, err :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os.OpenFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./test/"')]),t._v("+handler.Filename, os.O_WRONLY"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("os.O_CREATE, 0666"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 此处假设当前目录下已存在test目录\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" nil "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt.Println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tdefer f.Close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tio.Copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nfunc "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thttp.HandleFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/v2"')]),t._v(", sayHelloName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" //设置访问路由\n\thttp.HandleFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),t._v(", login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\thttp.HandleFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/upload"')]),t._v(", upload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\terr :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http.ListenAndServe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9090"')]),t._v(", nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 设置监听端口\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" nil "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog.Fatal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ListenAndServe: "')]),t._v(", err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("准备启动脚本 start.sh。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\ndlv debug "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--headless")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--listen")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(":2345 --api-version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" --accept-multiclient   "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src/web.go\n")])])]),s("ul",[s("li",[t._v("编写 Dockerfile。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("FROM golang:1.19\n\nRUN "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /web/\n\nCOPY ./dlv /usr/local/bin/\nCOPY ./web.go /go/src\nCOPY ./start.sh  /web/\nRUN "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v("   u+x /web/start.sh\nWORKDIR /go/src/\nENTRYPOINT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/web/start.sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("构建镜像。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" web:1.0\n")])])]),s("ul",[s("li",[t._v("运行镜像。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9090")]),t._v(":9090 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2345")]),t._v(":2345 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--privileged")]),t._v("  web:1.0\n")])])]),s("ul",[s("li",[t._v("goland 的配置。")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(420),alt:""}})]),t._v(" "),s("p",[t._v("访问： "),s("code",[t._v("curl localhost:9090/v2")]),t._v(" "),s("img",{attrs:{src:a(421),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"git使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git使用"}},[t._v("#")]),t._v(" git使用")]),t._v(" "),s("ul",[s("li",[t._v("合并分支")])]),t._v(" "),s("p",[t._v("比如想把feat-1合并到master，需要先切到master分支\n"),s("img",{attrs:{src:a(422),alt:""}})]),t._v(" "),s("p",[t._v("也可以点击工具栏总的git，选择merge\n"),s("img",{attrs:{src:a(423),alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(424),alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);