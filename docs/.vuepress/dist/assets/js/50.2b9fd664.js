(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{464:function(s,a,t){"use strict";t.r(a);var e=t(17),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("h2",{attrs:{id:"获取指定容器名称的容器-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取指定容器名称的容器-id"}},[s._v("#")]),s._v(" 获取指定容器名称的容器 ID")]),s._v(" "),a("p",[s._v("在使用 docker ps | grep maiscrm 命令之后，你可以使用其他命令来提取 Docker 容器的 ID。下面有两种常用的方法：")]),s._v(" "),a("ul",[a("li",[s._v("使用 awk 命令：")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" maiscrm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("\n")])])]),a("ul",[a("li",[s._v("使用 cut 命令：")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" maiscrm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("这将执行类似的操作，但是使用 cut 命令来按空格分隔行，并提取第一列，即容器的 ID。")]),s._v(" "),a("p",[s._v("无论使用哪种方法，最终的输出都是 Docker 容器的 ID。")]),s._v(" "),a("p",[s._v("请注意，这些命令假定你所运行的容器 ID 是在输出的第一列，并且在输出中只有一个匹配的容器。如果有多个匹配项，这些命令可能会返回多个容器的 ID。如果你只想获取匹配项的第一个容器 ID，可以使用 head -n 1 命令限制输出只包含第一行。例如：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" maiscrm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/system/linux.html#awk"}},[s._v("其中的 linux 命令参考这里")])],1),s._v(" "),a("h2",{attrs:{id:"docker-网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-网络"}},[s._v("#")]),s._v(" Docker 网络")]),s._v(" "),a("ul",[a("li",[s._v("创建")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create my_default\n")])])]),a("ul",[a("li",[s._v("查询 Docker 中的网络信息")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])])]),a("ul",[a("li",[s._v("其它网络操作")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("\n")])])]),a("p",[s._v("该命令将显示 Docker 中的所有网络，并提供有关每个网络的详细信息，例如网络 ID、名称、驱动程序、创建时间等。")]),s._v(" "),a("p",[s._v("如果要查看特定网络的详细信息，可以使用 docker network inspect 命令，后跟网络名称或 ID。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network inspect "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("network_name_or_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("替换 <network_name_or_id> 为要查询的网络的名称或 ID。")]),s._v(" "),a("p",[s._v("这样，你就可以获取有关 Docker 中网络的详细信息，包括网络配置、连接到该网络的容器列表和网络驱动程序等。")])])}),[],!1,null,null,null);a.default=r.exports}}]);