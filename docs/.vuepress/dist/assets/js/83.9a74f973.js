(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{493:function(t,s,e){"use strict";e.r(s);var a=e(17),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"monstache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monstache"}},[t._v("#")]),t._v(" Monstache")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("用于从 Mongodb 同步数据到 Elasticsearch")])]),t._v(" "),s("h2",{attrs:{id:"启动-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-mongodb"}},[t._v("#")]),t._v(" 启动 Mongodb")]),t._v(" "),s("p",[s("strong",[t._v("monstache 是根据 mongodb 的 oplog 来同步数据的，所以 mongodb 需要使用集群的方式，以下方式启动一个单节点集群")])]),t._v(" "),s("p",[t._v("新建 docker-compose.yml")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.4")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"27016:27017"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动时需要的参数配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--replSet rs0 --bind_ip_all"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my_default\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动后执行以下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 1.进入容器初始化副本集执行 mongo --host mongo --eval \'rs.initiate({_id: "rs0", members: [{_id: 0, host: "mongo:27017"}]})\'')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.进入容器查看副本集状态执行 mongo --host mongo --eval 'rs.status()'")]),t._v("\n")])])]),s("h2",{attrs:{id:"启动-elasticsearch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-elasticsearch"}},[t._v("#")]),t._v(" 启动 Elasticsearch")]),t._v(" "),s("p",[t._v("参考： "),s("RouterLink",{attrs:{to:"/数据存储/elasticsearch.html#docker-compose方式启动"}},[t._v("docker compose 启动 es")])],1),t._v(" "),s("p",[t._v("新建 docker-compose.yml")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.7"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("elasticsearch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker.elastic.co/elasticsearch/elasticsearch:7.10.2"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" elasticsearch_001\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9200:9200"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9300:9300"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node.name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" es01\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("discovery.type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" single"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cluster.name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mycluster\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ES_JAVA_OPTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Xms512m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Xmx512m\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es-data-es01:/usr/share/elasticsearch/data"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ulimits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("soft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kibana")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker.elastic.co/kibana/kibana"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7.10.2\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kibana_001\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" elasticsearch\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5601:5601"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9600:9600"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SERVERNAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kibana\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ELASTICSEARCH_HOSTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//elasticsearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ES_JAVA_OPTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Xmx512m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Xms512m\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("es-data-es01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不加会自动创建出 elasticsearch_default 网络")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my_default\n")])])]),s("p",[t._v("执行 "),s("code",[t._v("docker-compose up")])]),t._v(" "),s("h2",{attrs:{id:"启动-monstache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-monstache"}},[t._v("#")]),t._v(" 启动 monstache")]),t._v(" "),s("p",[t._v("新建docker-compose.yml")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("monstache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rwynn/monstache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rel6\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./config_for_docker.toml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/app/config.toml\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f /app/config.toml\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my_default\n")])])]),s("p",[t._v("新建 config_for_docker.toml")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connection settings")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect to MongoDB using the following URL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("mongo-url")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb://mongo:27017"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect to the Elasticsearch REST API at the following node URLs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("elasticsearch-urls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://elasticsearch:9200"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# frequently required settings")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you don't want to listen for changes to all collections in MongoDB but only a few")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e.g. only listen for inserts, updates, deletes, and drops from mydb.mycollection")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this setting does not initiate a copy, it is a filter on the oplog change listener only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#namespace-regex = '^testdb\\.member$'      #testdb表示mongodb的数据库，member表示集合，表示要匹配的名字空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("namespace-regex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^testdb\\.member$'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# additionally, if you need to seed an index from a collection and not just listen for changes from the oplog")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you can copy entire collections or views from MongoDB to Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# direct-read-namespaces = ["mydb.mycollection", "db.collection", "test.test"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you want to use MongoDB change streams instead of legacy oplog tailing add the following")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in this case you don't need regexes to filter collections.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# change streams require MongoDB version 3.6+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# change streams can only be combined with resume, replay, or cluster-name options on MongoDB 4+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you have MongoDB 4+ you can listen for changes to an entire database or entire deployment")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to listen to an entire db use only the database name.  For a deployment use an empty string.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# change-stream-namespaces = ["mydb.mycollection", "db.collection", "test.test"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# additional settings")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# compress requests to Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# generate indexing statistics")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stats = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index statistics into Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index-stats = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use the following PEM file for connections to MongoDB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# mongo-pem-file = "/path/to/mongoCert.pem"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# disable PEM validation")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mongo-validate-pem-file = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use the following user name for Elasticsearch basic auth")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#elasticsearch-user = "someuser"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use the following password for Elasticsearch basic auth")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#elasticsearch-password = "somepassword"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use 4 go routines concurrently pushing documents to Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# elasticsearch-max-conns = 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use the following PEM file to connections to Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# elasticsearch-pem-file = "/path/to/elasticCert.pem"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# validate connections to Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# elastic-validate-pem-file = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# propogate dropped collections in MongoDB as index deletes in Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("dropped-collections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# propogate dropped databases in MongoDB as index deletes in Elasticsearch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("dropped-databases")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do not start processing at the beginning of the MongoDB oplog")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you set the replay to true you may see version conflict messages")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in the log if you had synced previously. This just means that you are replaying old docs which are already")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in Elasticsearch with a newer version. Elasticsearch is preventing the old docs from overwriting new ones.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# replay = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# resume processing from a timestamp saved in a previous run")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("resume")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从上次同步的时间开始同步")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do not validate that progress timestamps have been saved")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# resume-write-unsafe = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# override the name under which resume state is saved")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# resume-name = "default"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude documents whose namespace matches the following pattern")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# namespace-exclude-regex = '^mydb\\.ignorecollection$'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# turn on indexing of GridFS file content")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index-files = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# turn on search result highlighting of GridFS content")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# file-highlighting = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index GridFS files inserted into the following collections")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# file-namespaces = ["users.fs.files"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print detailed information including request traces")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("verbose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable clustering mode")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("cluster-name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mycluster'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#es集群名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do not exit after full-sync, rather continue tailing the oplog")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exit-after-direct-reads = false")]),t._v("\n")])])]),s("p",[t._v("执行：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up\n")])])]),s("p",[t._v("观察日志连接成功后去创建 "),s("code",[t._v("testdb")]),t._v(" 数据库和 "),s("code",[t._v("member")]),t._v(" 表，添加一条数据，es 中会新增一个 "),s("code",[t._v("testdb.member")]),t._v(" 的索引，其中有新增的数据。")]),t._v(" "),s("p",[t._v("以下是 monstache 相关文档：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://rwynn.github.io/monstache-site/start/#installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://rwynn.github.io/monstache-site/start/#installation"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/rwynn/monstache",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/rwynn/monstache"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/rwynn/monstache/blob/rel6/docker/test/docker-compose.test.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/rwynn/monstache/blob/rel6/docker/test/docker-compose.test.yml"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);